# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Install dependencies
      run: |
        poetry install --no-root
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv

  lint:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    needs: build
    concurrency: 
      group: lint
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Install dependencies
      run: |
        poetry install --no-root
    - name: Recover cached dependencies
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv
    - name: Lint
      run: | 
        poetry run task lint
        
  formatter:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    needs: build
    concurrency: 
      group: formatter
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Install dependencies
      run: |
        poetry install --no-root
    - name: Recover cached dependencies
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv
    - name: Formatter
      run: | 
        poetry run task formatter

  security:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    needs: build
    concurrency: 
      group: security
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Install dependencies
      run: |
        poetry install --no-root
    - name: Recover cached dependencies
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv
    - name: Security
      run: |
        poetry run task security
  
  unittests:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    needs: [lint, formatter, security]
    concurrency: static-tests
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Install dependencies
      run: |
        poetry install --no-root
    - name: Recover cached dependencies
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv
    - name: unittests
      run: |
        poetry run task test
